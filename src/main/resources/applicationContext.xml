<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
	default-lazy-init="true" default-autowire="byName">
	<!-- 注意上面的default-autowire="byName"，如果没有这个声明那么HibernateDaoSupport中的sessionFactory不会被注入 -->
	
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- kaptcha 验证码-->
	<import resource="classpath:spring-captcha.xml"/>
	
	<!-- For mail settings and future properties files -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:hibernate.properties</value>
				<value>classpath:dsconfig.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- Hibernate SessionFactory -->
	<!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">...</bean> -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
				<prop key="hibernate.query.substitutions">${hibernate.query.substitutions}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>
	
	<!-- Enable @Transactional support -->
	<tx:annotation-driven />

	<!-- Activates scanning of @Autowired -->
	<context:annotation-config />

	<!-- Enable @AspectJ support -->
	<aop:aspectj-autoproxy />

	<!-- Activates scanning of @Repository -->
	<!-- 自动扫描组件，这里要把dao下面的 dbm去除，他们是在上面单独配置的，如果不去除会影响事务管理的。 -->
	<context:component-scan base-package="com.touco.huaguo.dao"/>

	<!-- Activates scanning of @Service -->
	<context:component-scan base-package="com.touco.huaguo.services" />
	
	<!-- Transaction manager for a single Hibernate SessionFactory (alternative 
		to JTA) -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- =================================================================== -->
	<!-- AOP: Configuration and Aspects -->
	<!-- =================================================================== -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* *..services.*Service.*(..))" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="exists*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="save*" read-only="false" />
			<tx:method name="*" read-only="false" propagation="NESTED"
				rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	
</beans>
